// ==========================================================================
// Pedestal // Base // Theme // MIXINS
// ==========================================================================


@import 'mixin-angle-edge';
@import 'mixin-link-underline';


/// Add a glowing effect to a block element state
///
/// @param {string} $selector - Used for selector state. Default: focus, Options: hover, active, visited
/// @param {unit}   $fade-time - Default: 300ms
/// @param {color}  $glowing-effect-color - Default: fade-out($primary-color, .25)
@mixin block-glowing-effect(
  $selector:focus,
  $fade-time: 300ms,
  $glowing-effect-color: fade-out($primary-color, 0.25)
) {
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    border-color: $glowing-effect-color;
    box-shadow: 0 0 rem( 5px ) $glowing-effect-color;
  }
}

/// Target IE10+ only
@mixin ie-only {
  @media all and ( -ms-high-contrast: none ), ( -ms-high-contrast: active ) {
    @content;
  }
}

/// Target Chrome 29+ only
///
/// https://stackoverflow.com/a/24749343
@mixin chrome-only {
  @supports ( -webkit-appearance: none ) and ( not ( overflow:-webkit-marquee ) )
    and ( not ( -ms-ime-align: auto ) ) and ( not ( -moz-appearance:none ) ) {
    @content;
  }
}

/// Target Chrome 22+ and Safari 6.1+ only
///
/// https://stackoverflow.com/a/24749343
@mixin webkit-only {
  // stylelint-disable media-feature-name-no-vendor-prefix
  @media screen and ( -webkit-min-device-pixel-ratio: 0 )
    and ( min-resolution: 0.001dpcm ),
    screen and( -webkit-min-device-pixel-ratio: 0 ) {
    @content;
  }
  // stylelint-enable media-feature-name-no-vendor-prefix
}

/// Target Firefox 37+ only
///
/// https://jeffclayton.wordpress.com/2015/05/04/css-hacks-for-firefox-37/
@mixin firefox-only {
  @supports ( -moz-appearance: none ) and ( display: contents ) {
    @content;
  }
}


//
// Typography
// ==========================================================================

/// Generate heading font size styles including size reduction
///
/// Couples Foundation's `$h*-font-size` and `$h*-font-reduction` variables.
///
/// @access public
/// @param {number} $h-level - Heading level number
/// @param {bool}   $do-reduction - Include reduction sizing?
@mixin h-size( $h-level, $do-reduction: $enable-heading-font-size-reduction ) {
  @if not is-number( $h-level ) {
    @error 'Parameter `$h-level` with value `#{$h-level}` is not a number!';
  }

  $h-level-cl: clamp( $h-level, 1, 6 );
  @if $h-level-cl != $h-level {
    @error 'Parameter `$h-level` with value `#{$h-level}` is not a valid heading level!';
  }

  $h-size-vars: (
    1: $h1-font-size,
    2: $h2-font-size,
    3: $h3-font-size,
    4: $h4-font-size,
    5: $h5-font-size,
    6: $h6-font-size,
  );

  $h-reduction-vars: (
    1: $h1-font-reduction,
    2: $h2-font-reduction,
    3: $h3-font-reduction,
    4: $h4-font-reduction,
    5: $h5-font-reduction,
    6: $h6-font-reduction,
  );

  $base-size: map-fetch( $h-size-vars, $h-level );
  $size: $base-size;
  @if $do-reduction {
    $size: $size - map-fetch( $h-reduction-vars, $h-level );
  }

  font-size: $size;

  @media #{$medium-up} {
    font-size: $base-size;
  }
}

/// De-emphasized text
@mixin de-emphasized {
  line-height: 1.4;
  font-family: $body-font-family;
  font-size: rem( 14px );
  color: $body-font-color;
  letter-spacing: em( 0.3px );
}


//
// Icons
// ==========================================================================

/**
 * Generate icons and fallbacks from PNG/SVG
 *
 * @param  {string} $path:        null                Absolute URI path to the icon
 * @param  {unit}   $size:        $icon-diameter--med Size of icons to generate
 * @param  {bool}   $resize-only: false               Set whether to rezize only
 * @param  {bool}   $path-only:   false               Set whether to change path without resizing
 * @param  {bool}   $fallback:    true                Set whether to use SVG
 * @param  {bool}   $live-url:    false               If set, base the image path off the live URL
 */
@mixin iconize(
  $path: '',
  $size: $icon-diameter--med,
  $resize-only: false,
  $path-only: false,
  $fallback: true,
  $live-url: false
) {

  @if $path-only == false {
    width: $size;
    height: $size;
    background-position: center;
    background-size: $size;
    background-repeat: no-repeat;
  }

  @if $resize-only == false {

    @if $path {

      // Normal icons
      $png-path: $path + '.png';
      $svg-path: $path + '.svg';

      @if $live-url {
        $png-path: $site-live-url + $path + '.png';
        $svg-path: $site-live-url + $path + '.svg';
      }

      background-image: url( '#{$png-path}' );

      @if $fallback {
        background-image: url( '#{$svg-path}' );
      }

    }
  }
}


//
// Buttons
// ==========================================================================

/// Set up background and text color for a button color variant
///
/// Hover and focus text color must be set explicitly in all button variations
/// to override default anchor element behavior. Any deviation from this pattern
/// can be handled on a case by case basis.
///
/// @param {color} $bg-color - Background color
@mixin button-color-variant( $bg-color ) {
  background-color: $bg-color;

  &,
  &:hover,
  &:focus {
    color:
      text-contrast(
        $bg: $bg-color,
        $text-dark: $button-text-color-dark
      );
  }
}


//
// Shapes
// ==========================================================================

@mixin corner-triangle( $size: rem( 16px ), $color: $primary-color, $corner: 'top-right' ) {
  width: 0;
  height: 0;

  @if $corner == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  } @else if $corner == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  } @else if $corner == 'bottom-left' {
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $corner == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }

}


//
// Layout
// ==========================================================================

/// Block grid layout
///
/// Use this when you want a fluid grid layout for an arbitrary number of
/// similarly-sized items like user cards or videos or photos etc.
///
/// @param {number|bool} $per-row [false]            How many items to display per row
/// @param {number}      $spacing [rem( 16px )] Spacing between items
/// @param {bool}        $include-spacing [true]     Do you want to include spacing between items?
/// @param {string}      $child-selector [`> *`]     Selector for the child elements
/// @param {bool}        $base-style [true]          Include the base styles? Should probably be false if in a media query
@mixin block-grid(
  $per-row: false,
  $spacing: rem( 16px ),
  $include-spacing: true,
  $child-selector: '> *',
  $base-style: true
) {

  @if $include-spacing {
    #{$child-selector} {
      padding: 0 ( $spacing / 2 ) $spacing;
    }
  }

  @if $base-style {
    @include clearfix;

    display: block;
    margin: 0 ( -$spacing / 2 );
    padding: 0;

    #{$child-selector} {
      display: block;
      float: left;
      height: auto;
    }
  }

  @if $per-row {
    #{$child-selector} {
      list-style: none;
      width: 100% / $per-row;

      &:nth-of-type( 1n ) {
        clear: none;
      }

      &:nth-of-type( #{$per-row}n+1 ) {
        clear: both;
      }
    }
  }
}

/// Break a component out of the bounds of its parent to edge of viewport width
///
/// @param  {string} $side ['both']                Side to explode
/// @param  {string} $selector ['&']               Selector
/// @param  {string} $inner-selector ['&__inner']  Inner selector
/// @param  {bool}   $ignore-gutter [false]        Ignore the grid gutter? By default
///     the inner padding will include the gutter space
@mixin explode-component(
  $side: 'both',
  $selector: '&',
  $inner-selector: '&__inner',
  $ignore-gutter: false
) {
  $sides: ();

  @if $side == 'left' or $side == 'both' {
    $sides: append( $sides, 'left' );
  }

  @if $side == 'right' or $side == 'both' {
    $sides: append( $sides, 'right' );
  }

  $side-gutter: $column-gutter / 2;
  $margin: if( $ignore-gutter, calc( #{-100vw} - #{$side-gutter} ), -100vw );
  $padding: if( $ignore-gutter, calc( 100vw - #{$side-gutter} ), 100vw );

  #{$selector} {
    position: relative;

    @each $side in $sides {
      margin-#{$side}: $margin;

      #{$inner-selector} {
        padding-#{$side}: $padding;
      }
    }
  }
}
