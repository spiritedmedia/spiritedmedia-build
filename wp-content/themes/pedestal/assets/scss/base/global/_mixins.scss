// ==========================================================================
// Pedestal // Base // Global // MIXINS
// ==========================================================================





//
// Typography
// ==========================================================================


/**
 * Set unhovered and hovered link colors and decoration easily.
 *
 * Defaults to `a` selector. If included within another selector, just use `&`
 *
 * Unvisited/visited will be the same, hover/active will be the same.
 */
@mixin anchorage(
  $selector: 'a',
  $unhovered: $anchor-font-color,
  $hovered: $anchor-font-color-hover,
  $unhovered-decoration: $anchor-text-decoration,
  $hovered-decoration: $anchor-text-decoration-hover
) {

  #{$selector} {

    &,
    &:visited {
      color: $unhovered;
      text-decoration: $unhovered-decoration;
    }

    &:hover,
    &:active {
      color: $hovered;
      text-decoration: $hovered-decoration;
    }

  }
}


/**
 * Calculate text color with sufficient contrast with a given background color
 *
 * Based on Foundation `button-style` mixin
 *
 * @param  {color} $bg:          Background color
 * @param  {color} $text-light:  $mixin-text-color-light
 * @param  {color} $text-dark:   $mixin-text-color-dark
 * @param  {percent} $threshold: Lightness threshold
 */
@mixin text-color(
  $bg,
  $text-light: $mixin-text-color-light,
  $text-dark: $mixin-text-color-dark,
  $threshold: 65%
) {
  $bg-lightness: lightness( $bg );

  color: if( $bg-lightness > $threshold, $text-dark, $text-light );
}


/// Lighten/dim some links
@mixin link-light {
  color: $dimmed-text-color;

  &:hover,
  &:active {
    color: $grey-25;
  }
}


/// Darken some links arbitrarily
@mixin link-dark {
  color: $body-font-color;

  &:hover,
  &:active {
    color: $grey-40;
  }
}





//
// Icons
// ==========================================================================


/**
 * Load an image placeholder on the given element
 *
 * @param  {unit} $size  : $icon-diameter Size of the image
 * @param  {str}  $shape : square
 */
@mixin img-placeholder( $size: $icon-diameter, $shape: square ) {
  display: block;

  @if global-variable-exists( site-theme-name ) {
    @include iconize(
      $path: $site-theme-logo-abspath + '/logo_icon_placeholder',
      $size: $size
    );
  }
}





//
// Borders
// ==========================================================================


@mixin stdbd(
  $side: 'all',
  $width: 1px,
  $color: $border-std-color,
  $neut: false
) {

  $valid-sides: 'top' 'right' 'bottom' 'left' 'all';

  @if not sl-contain( $valid-sides, $side ) {
    @error 'Invalid border side argument specified in mixin `stdbd`';
  }

  @if 'all' == $side {
    border: $width $color solid;
  } @else {
    @if $neut {
      border: 0;
    }

    border-#{$side}: $width $color solid;
  }

}


@mixin dash-rule {
  width: 4em;
  margin: 0 auto;
  border-bottom: 4px solid $border-std-color;
}
